-- You'll want to import these in just about every project you'll work on.

import "CoreLibs/object"
import "CoreLibs/graphics"
import "CoreLibs/sprites"
import "CoreLibs/timer"

-- Declaring this "gfx" shorthand will make your life easier. Instead of having
-- to preface all graphics calls with "playdate.graphics", just use "gfx."
-- Performance will be slightly enhanced, too.
-- NOTE: Because it's local, you'll have to do it in every .lua source file.

local gfx <const> = playdate.graphics

-- Here's coordinates declaration. We'll scope it to this file because
-- several functions need to access it
local x = 170
local y = 120

-- `playdate.update()` is the heart of every Playdate game.
-- This function is called right before every frame is drawn onscreen.
-- Use this function to poll input, run game logic, and move sprites.

function playdate.update()
    gfx.clear()
    playdate.graphics.drawText("Hello world!", x, y)

    -- Poll the d-pad and move our player accordingly.
    -- (There are multiple ways to read the d-pad; this is the simplest.)
    -- Note that it is possible for more than one of these directions
    -- to be pressed at once, if the user is pressing diagonally.

    if playdate.buttonIsPressed( playdate.kButtonUp ) then
        y = y - 2
    end
    if playdate.buttonIsPressed( playdate.kButtonRight ) then
        x = x + 2
    end
    if playdate.buttonIsPressed( playdate.kButtonDown ) then
        y = y + 2
    end
    if playdate.buttonIsPressed( playdate.kButtonLeft ) then
        x = x - 2
    end

    playdate.timer.updateTimers()

end
